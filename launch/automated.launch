<?xml version="1.0" ?>
<launch>
  <arg name="robot_ip" />
  <include file="$(find franka_control)/launch/franka_control.launch">
    <arg name="robot_ip" value="$(arg robot_ip)" />
    <arg name="load_gripper" value="true" />
  </include>
  <include file="$(find panda_moveit_config)/launch/move_group.launch">
    <arg name="load_gripper" value="true" />
  </include>

  <!-- publish the robot state (tf transforms) -->
  <param name="publish_frequency" value="50.0" type="double" />
  <node name="netft_node" pkg="netft_utils" type="netft_node" respawn="false" output="screen" args="192.168.1.1"/>
  <!-- <node name="netft_force_utils" pkg="netft_utils" type="netft_utils" respawn="false" output="screen" /> -->


  <arg name="axis"  default="random"/>
  <param name="applied_axis" type="string" value="$(arg axis)"/>

  <arg name="desired_force"  default="0"/>
  <param name="FT_desired" type="double" value="$(arg desired_force)"/>

  <rosparam command="load" file="$(find franka_more_controllers)/config/franka_more_controllers.yaml"/>
  <node name="automated" pkg="franka_more_controllers" type="automated.py" output="screen" required="true">
    <rosparam param="automated_step">[steps]</rosparam>
    <rosparam param="controllers">[force_controller_invdynamics, position_joint_trajectory_controller]</rosparam>
  </node>
  <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_example_controllers)/launch/robot.rviz"/>
  <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false" />
  <node name="dynamic_reconfigure_compliance_param_node" pkg="dynamic_reconfigure" type="dynparam"
       args="set dynamic_reconfigure_compliance_param_node desired_force_torque $(arg desired_force)" />


</launch>
